<?php
/**
 * Plugin Name: WooCommerce Meta Data Logger
 * Description: A WordPress plugin to log metadata from WooCommerce orders.
 * Version: 1.0
 * Author: Your Name
 * Author URI: https://yourwebsite.com
 */

// Send HTTP request and log meta data when an order is marked as completed
function send_http_request_on_product_purchase($order_id) {
    $order_data = fetch_order_data($order_id);

    if (!$order_data) {
        error_log('Error: Invalid order ID: ' . $order_id);
        return;
    }

    log_meta_data($order_data);
}

function fetch_order_data($order_id) {
    $url = 'https://goldfollower.com/staging/wp-json/wc/v3/orders/' . $order_id;

    // Prepare authentication headers
    $headers = [
        'Authorization' => 'Basic ' . base64_encode('ck_84be584aaccd8313f3920c4a0fa1be59cb328c40:cs_858ba42c13d9f86a54c6644c454fe0cc27ed936b')
    ];

    // Send the request
    $response = wp_remote_get($url, ['headers' => $headers, 'timeout' => 15]);

    // Check for errors and decode the response
    if (is_wp_error($response)) {
        return false;
    }

    return json_decode(wp_remote_retrieve_body($response));
}

function log_meta_data($order_data) {
    $plugin_dir = plugin_dir_path(__FILE__);
    $log_file = $plugin_dir . 'meta_data_log.txt';
    $log_data = '';

    // Add the date, order ID, and a separator line
    $log_data .= 'Date: ' . date('Y-m-d H:i:s') . ', Order ID: ' . $order_data->id . PHP_EOL;

    foreach ($order_data->meta_data as $meta) {
        if (isset($meta->key) && $meta->key === 'yith_wcpmr_order_cart') {
            $items = $meta->value->items;
            foreach ($items as $item) {
                if (isset($item->tmcartepo)) {
                    foreach ($item->tmcartepo as $tmcartepo) {
                        $log_data .= 'Meta Name: ' . $tmcartepo->name . ', Meta Value: ' . $tmcartepo->value . PHP_EOL;
                    }
                }
            }
        }
    }

    // Add a separator line at the end of the log entry
    $log_data .= str_repeat('=', 80) . PHP_EOL;

    file_put_contents($log_file, $log_data, FILE_APPEND | LOCK_EX);
}

add_action('woocommerce_order_status_completed', 'send_http_request_on_product_purchase');
